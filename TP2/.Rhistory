plot(q$scores,col=crabs$sp,main="Premier plan factoriel avec mise à l'échelle")
pairs(crabsquant, col=c('blue','orange')[crabs$sp],pch=1)
pairs(crabsquant, col=c('red','blue')[crabs$sex],pch=1)
plot(q$scores,col=crabs$sex,main="Premier plan factoriel avec mise à l'échelle")
plot(q$scores,col=crabs$sp,main="Premier plan factoriel avec mise à l'échelle")
plot?
1
help("plot")
plot(q$scores,col=crabs$sex,main="Représentation du sexe des individus")
plot(q$scores,col=crabs$sp,main="Représentation de l'espèce des individus")
plot(q$scores,col=crabs$sex,main="Représentation du sexe")
plot(q$scores,col=crabs$sp,main="Représentation de l'espèce")
plot(q$scores,col=crabs$sex,col=crabs$sp)
plot(q$scores,col=crabs$sex)
plot(q$scores)
crabs_rw <- crabs[,4:8]
crabsquant.pr<-princomp(crabs_rw[,-2])
plot(crabsquant.pr$scores,col=crabs$sp,main="Premier plan factoriel sans la variable RW")
legend("topright",legend=c("B","O"),col=c(1,2),pch=1)
par(mfrow=c(1,2))
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Premier plan factorial sans la variable RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Premier plan factoriel sans la variable RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans la variable RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans la variable RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans la variable RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans la variable RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
fviz_screeplot(q)
fviz_pca_biplot(q,habillage = quali.sup, addEllipses = TRUE, ellipse.level = 0.68) +
theme_minimal()
fviz_screeplot(q)
crabs
data(crabs)
crabsquant<-crabs[,4:8]
q <- princomp(crabsquant)
fviz_screeplot(q)
fviz_screeplot(q)
sum_tot = crabs$FL + crabs$RW + crabs$CL + crabs$CW + crabs$BD
crabs$FL = crabs$FL/sum_tot
crabs$RW = crabs$RW/sum_tot
crabs$CL = crabs$CL/sum_tot
crabs$CW = crabs$CW/sum_tot
crabs$BD = crabs$BD/sum_tot
crabsquant<-crabs[,4:8]
q <- princomp(crabsquant)
fviz_screeplot(q)
plot(q$scores)
plot(q$scores,col=crabs$sex,main="Représentation du sexe")
pairs(crabsquant, col=c('blue','orange')[crabs$sp],pch=1)
plot(q$scores,col=crabs$sp,main="Représentation de l'espèce")
pairs(crabsquant, col=c('red','blue')[crabs$sex],pch=1)
fviz_screeplot(q)
fviz_screeplot(q, ncp=5)
fviz_screeplot(q, ncp=5)
library(MASS)
data(crabs)
crabs_rw <- crabs[,4:8]
crabsquant.pr<-princomp(crabs_rw[,-2])
par(mfrow=c(1,2))
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
crabsquant.pr
q
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
crabsquant.pr<-princomp(crabsquant[,-2])
par(mfrow=c(1,2))
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
x11()
par(mfrow=c(1,2))
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='B',],col=crabs$sex,main="Traitement sans RW avec sp='B'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
plot(crabsquant.pr$scores[crabs$sp=='O',],col=crabs$sex,main="Traitement sans RW avec sp='O'")
legend("topright",legend=c("F","M"),col=c(1,2),pch=1)
iris_dist <- dist(iris[,-4]*iris[,-4])
cah_irs <- hclust(iris_dist, method="complete")
cah_irs_sgl <- hclust(iris_dist, method="single")
cah_irs_ward <- hclust(iris_dist, method="ward.D2")
cah_irs_ctr <- hclust(iris_dist, method="centroid")
x11()
par(mfrow=c(2,2))
plot(cah_irs, main="complete")
plot(cah_irs_sgl, main="single")
plot(cah_irs_ward, main="ward D2")
plot(cah_irs_ctr, main="centroid")
cdh_irs <- diana(iris_dist)
x11()
plot(cdh_irs)
library(cluster)
library(cluster) #diana
cdh_irs <- diana(iris_dist)
plot(cdh_irs)
unique(iris$Species)
aggregate(iris,by=list(fit_k3$cluster),FUN=mean)
fit_k3 <- kmeans(iris_scaled, 3)
getwd()
setwd("D:/School/UTC/A16-P17/P17/SY09/TD/TP2")
###### Library
library(Hmisc)# describe()
library(MASS) #shepard
library(asbio)
library(mclust)# adjustedRandIndex
library(cluster) #diana
### 1. Iris
iris_scaled <- scale(iris[,-5])
fit_k2 <- kmeans(iris_scaled, 2)
fit_k3 <- kmeans(iris_scaled, 3)
fit_k4 <- kmeans(iris_scaled, 4)
x11()
par(mfrow=c(1,3))
clusplot(iris, fit_k2$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=2")
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
clusplot(iris, fit_k4$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=4")
x11()
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
### Inertie intra-classe
aggregate(iris,by=list(fit_k3$cluster),FUN=mean)
aggregate(iris[,-5],by=list(fit_k3$cluster),FUN=mean)
iris
(iris[,-5]-fit_k3$centers)
fit_k3$centers
fit_k3$centers[1]
fit_k3$centers[,1]
i <-0
n <- nrow(iris)
s <- 0
for(i in n)
{
s <- s+(1/n)*(iris[,-5]-fit_k3$centers[,i])%*% t(iris[,-5]-fit_k$centers[,i])
}
for(i in nrow(fit_k3$centers))
{
s <- s+(1/n)*(iris[,-5]-fit_k3$centers[,i])%*% t(iris[,-5]-fit_k$centers[,i])
}
for(i in nrow(fit_k3$centers))
{
s <- s+(1/n)*(iris[,-5]-fit_k3$centers[,i])%*% t(iris[,-5]-fit_k3$centers[,i])
}
fit_k3$centers[1]
fit_k3$centers[,1]
fit_k3$centers
fit_k3$centers[,1]
for(i in nrow(fit_k3$centers))
{
s <- s+(1/n)*(iris[,-5]-fit_k3$centers[i,])%*% t(iris[,-5]-fit_k3$centers[i,])
}
fit_k3$tot.withinss
for(k in 1:10)
{
for (i in 1:100){
iner_k_iris_k[i,k] <-kmeans(iris,k)$tot.withinss
}
}
iner_k_iris_k[i,k] <-kmeans(iris[,-5],k)$tot.withinss
for(k in 1:10)
{
for (i in 1:100){
iner_k_iris_k[i,k] <-kmeans(iris[,-5],k)$tot.withinss
}
}
iner_iris_k <- matrix(0, nrow = nrow(iris), 10)
for(k in 1:10)
{
for (i in 1:100){
iner_k_iris_k[i,k] <-kmeans(iris[,-5],k)$tot.withinss
}
}
iner_iris_k <- matrix(0, nrow = nrow(iris), 10)
for(k in 1:10)
{
for (i in 1:100){
iner_iris_k[i,k] <-kmeans(iris[,-5],k)$tot.withinss
}
}
iner_iris_k
min_iner=apply(iner_tab,2,min)
min_iner=apply(iner_iris_k,2,min)
min_iner
min_iner<-apply(iner_iris_k,2,min)
min_iner
iner_iris_k
min_iner
min_iner<-apply(iner_iris_k,2,min)
min[iner_iris_k]
min[iner_iris_k[,2]]
iner_iris_k
min(iner_iris_k[,2])
iner_iris_k <- matrix(0, 100, 10)
for(k in 1:10)
{
for (i in 1:100){
iner_iris_k[i,k] <-kmeans(iris[,-5],k)$tot.withinss
}
}
iner_iris_k <- matrix(0, nrow=100, 10)
for(k in 1:10)
{
for (i in 1:100){
iner_iris_k[i,k] <-kmeans(iris[,-5],k)$tot.withinss
}
}
iner_iris_k
min(iner_iris_k[,2])
min(iner_iris_k[,3])
x11()
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris, fit_k3$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
for(k in 1:10)
{
for (i in 1:100){
iner_iris_k[i,k] <-fit_k3$tot.withinss
}
}
min(iner_iris_k[,3])
min(iner_iris_k[,2])
iner_iris_k
fit_k3
clusplot(fit_k3)
clusplot(fit_k3$cluster)
x11()
clusplot(iris,fit_k3$cluster)
min(iner_iris_k[,3])
for(k in 1:10)
{
for (i in 1:100){
iner_iris_k[i,k] <-fit_k3$tot.withinss
}
}
min(iner_iris_k[,3])
iner_iris_k
unique(iner_iris_k)
iner_iris_k10 <- matrix(0, nrow=100, 10)
for(k in 1:10)
{
for (i in 1:100){
iner_iris_k10[i,k] <-kmeans(iris[,-5],k)$tot.withinss
}
}
#iris K=3
min(iner_iris_k10[,3])
iner_iris_k10
min(fit_k3$tot.withinss)
min_iner=apply(iner_tab,2,min)
min_iner=apply(iner_iris_k,2,min)
min_iter
min_iner
min_iner=apply(iner_iris_k10,2,min)
min_iner
plot(min_iner)
plot(min_iner, main="Inertie intra-classe minimale en fonction de K")
plot(min_iner, main="Inertie intra-classe minimale en fonction de K", type="l")
unique(iner_iris_k10[,1])
plot(min_iner, main="Inertie intra-classe minimale en fonction de K", type="l", xlab="K",ylab="Inertie intra-classe")
par(mfrow=c(1,2))
clusplot(iris[,1:4],fit_k3$cluster,label=2,color=TRUE,main="Partitions avec k-means")
clusplot(iris[,1:4],iris$Species,label=2,color=TRUE,main="Réelle")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris[,1:4],fit_k3$cluster,label=2,color=TRUE,main="Partitions avec k-means")
clusplot(iris[,1:4],iris$Species,label=2,color=TRUE,main="Réelle")
fit_k3 <- kmeans(iris_scaled, 3)
clusplot(iris[,1:4],fit_k3$cluster,label=2,color=TRUE,main="Partitions avec k-means")
clusplot(iris[,1:4],iris$Species,label=2,color=TRUE,main="Réelle")
crabs2 <- read.csv("crabs2.csv", header=T)
head(crabs2)
crabs2_quant <- crabs2[,1:4] # variables quantitatives pour ACP
fit_k2 <- kmeans(crabs2_quant,2)
x11()
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(fit_k2)
clusplot(crabs2_quant,fit_k2)
clusplot(crabs2,fit_k2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=3")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=2")
fit_k2 <- kmeans(crabs2_quant,2)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=2")
fit_k2 <- kmeans(crabs2_quant,4)
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "K=2")
par(mfrow=c(1,2))
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "Partition avec k-means")
clusplot(iris[,1:4],iris$Species,label=2,color=TRUE,main="Réelle")
crabs2[5]
crabs2[6]
crabs_sp_sex<-apply(crabs2[5:6],1,paste,collapse=" ") #concatene le sexe et l'espece
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "Partition avec k-means")
clusplot(iris[,1:4],iris$Species,label=2,color=TRUE,main="Réelle")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2[,1:4],crabs_sp_sex,label=2,color=TRUE,main="Réelle")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2[,1:4],crabs_sp_sex,label=2,color=TRUE, shade=TRUE, lines=0,main="Réelle")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2,  main = "Partition avec k-means")
lines=0,
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE, shade=TRUE, labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE,  labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE,  labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2[,1:4],crabs_sp_sex,label=2,color=TRUE, lines=0,main="Réelle")
par(mfrow=c(1,2))
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE,  labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE,  labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2_quant,fit_k2$cluster,color=TRUE,  labels=2, lines=0, main = "Partition avec k-means")
clusplot(crabs2[,1:4],crabs_sp_sex,label=2,color=TRUE, lines=0,main="Réelle")
crabs2[5]
crabs2[6]
crabs_sp_sex
mut.raw <- read.csv("mutations2.csv", header=T, row.names=1)
mut <- as.dist(mut.raw, diag=T, upper=T)
fit <- cmdscale(mut, eig=TRUE, k=5) # -1/2 Q* D^2*Q
fit
x11()
x <- fit$points[,1]
y <- fit$points[,2]
plot(fit$points[,1],fit$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
fit_k3 <- kmeans(fit)
fit_k3 <- kmeans(fit,3)
fit <- cmdscale(mut, k=5) # -1/2 Q* D^2*Q
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
x11()
plot(fit$points[,1],fit$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
fit <- cmdscale(mut, k=5) # -1/2 Q* D^2*Q
fit
x11()
x <- fit$points[,1]
y <- fit$points[,2]
plot(fit$points[,1],fit$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
x11()
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
x11()
x <- fit$points[,1]
fit <- cmdscale(mut, k=5) # -1/2 Q* D^2*Q
fit
x11()
x <- fit$points[,1]
y <- fit$points[,2]
fit <- cmdscale(mut, eigen=TRUE k=5) # -1/2 Q* D^2*Q
fit
x <- fit$points[,1]
fit <- cmdscale(mut, eigen=TRUE, k=5) # -1/2 Q* D^2*Q
x <- fit$points[,1]
y <- fit$points[,2]
plot(fit$points[,1],fit$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
fit <- cmdscale(mut, eigen=TRUE, k=5) # -1/2 Q* D^2*Q
fit <- cmdscale(mut, eig=TRUE, k=5) # -1/2 Q* D^2*Q
x <- fit$points[,1]
y <- fit$points[,2]
plot(fit$points[,1],fit$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
fit_aftd <- cmdscale(mut, eig=TRUE, k=5) # -1/2 Q* D^2*Q
fit_aftd <- cmdscale(mut, eig=TRUE, k=5) # -1/2 Q* D^2*Q
x <- fit_aftd$points[,1]
y <- fit_aftd$points[,2]
plot(fit_aftd$points[,1],fit_aftd$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
par(mfrow=c(1,2))
plot(fit_aftd$points[,1],fit_aftd$points[,2], xlab="Coordinate 1", ylab="Coordinate 2", main="Metric	MDS")
text(x, y, labels = row.names(mut.raw)) # on s'intéresse à la distance des points par rapport aux autres et distinguer des groupes
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
x11()
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
fit <- cmdscale(mut, eig=TRUE, k=5) # -1/2 Q* D^2*Q
fit_k3 <- kmeans(fit,3)
fit_k3 <- kmeans(fit,3)
fit <- cmdscale(mut, k=5) # -1/2 Q* D^2*Q
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
fit_k3 <- kmeans(fit,3)
clusplot(mut.raw,fit_k3$cluster,color=TRUE,  labels=2, lines=0, main = "K=3")
iner_crabs_k3 <- matrix(0, nrow=100, 1)
for(k in 1:1)
{
for (i in 1:100){
iner_crabs_k3[i,k] <-kmeans(fit,3)$tot.withinss
}
}
# mut K=1
min(iner_crabs_k3[,1])
iner_crabs_k3
unique(iner_crabs_k3)
describe(iner_crabs_k3)
describe(as.factor(iner_crabs_k3))
